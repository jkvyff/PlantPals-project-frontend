{"ast":null,"code":"var _jsxFileName = \"/Users/kristian/Development/code/Mod5/Project/PlantPals-project-frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { API_ROOT } from './constants';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport HomeContainer from './containers/HomeContainer';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: {}\n    };\n\n    this.logout = event => {\n      this.clearToken();\n      this.setState({\n        user: ''\n      });\n      this.props.history.push(\"/login\");\n    };\n\n    this.getToken = () => {\n      localStorage.getItem('jwt');\n    };\n\n    this.getProfile = () => {\n      let token = getToken();\n\n      if (token) {\n        fetch(\"\".concat(API_ROOT, \"/profile\"), {\n          headers: {\n            'Authorization': 'Bearer ' + token\n          }\n        }).then(resp => resp.json()).then(json => {\n          console.log('profile:', json);\n          const _json$user = json.user,\n                username = _json$user.username,\n                plant_care_rating = _json$user.plant_care_rating,\n                avatar = _json$user.avatar;\n          this.setState({\n            user: {\n              username,\n              plant_care_rating,\n              avatar\n            }\n          });\n        });\n      }\n    };\n\n    this.getSignUp = (event, person) => {\n      event.preventDefault();\n      console.log(person);\n      let username = person.username;\n      let password = person.password;\n      fetch(\"\".concat(API_ROOT, \"/new\"), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: {\n            username,\n            password\n          }\n        })\n      }).then(resp => resp.json()).then(json => {\n        console.log('login:', json);\n\n        if (json && json.jwt) {\n          this.saveToken(json.jwt);\n          this.setState({\n            user: {\n              username\n            }\n          });\n        }\n      }).then(() => {\n        this.getProfile();\n      });\n    };\n  }\n\n  clearToken(jwt) {\n    localStorage.setItem('jwt', '');\n  }\n\n  saveToken(jwt) {\n    localStorage.setItem('jwt', jwt);\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      user: this.state.user,\n      getProfile: this.getProfile,\n      onLogout: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(HomeContainer, Object.assign({}, props, this.state, {\n        getProfile: this.getProfile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: props => React.createElement(Login, Object.assign({}, props, {\n        onLogin: this.getProfile,\n        onLogout: this.logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup\",\n      render: props => React.createElement(SignUp, Object.assign({}, props, {\n        onSignUp: this.getSignUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kristian/Development/code/Mod5/Project/PlantPals-project-frontend/src/App.js"],"names":["React","Component","API_ROOT","BrowserRouter","Router","Route","NavBar","HomeContainer","Login","SignUp","Footer","App","state","user","logout","event","clearToken","setState","props","history","push","getToken","localStorage","getItem","getProfile","token","fetch","headers","then","resp","json","console","log","username","plant_care_rating","avatar","getSignUp","person","preventDefault","password","method","body","JSON","stringify","jwt","saveToken","setItem","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { API_ROOT } from './constants';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport NavBar from './components/NavBar'\nimport HomeContainer from './containers/HomeContainer'\nimport Login from './components/Login'\nimport SignUp from './components/SignUp'\nimport Footer from './components/Footer'\n\nclass App extends Component {\n\n\tstate = {\n\t\tuser: {}\n\t}\n\n\tlogout = event => {\n\t\tthis.clearToken()\n\t\tthis.setState({ user: '' })\n\t\tthis.props.history.push(\"/login\");\n\t}\n\n\tclearToken(jwt) {\n\t\tlocalStorage.setItem('jwt', '')\n\t}\n\n\tgetToken = () => {\n\t\tlocalStorage.getItem('jwt')\n\t}\n\n\tsaveToken(jwt) {\n\t\tlocalStorage.setItem('jwt', jwt)\n\t}\n\t  \n\tgetProfile = () => {\n\t\tlet token = getToken()\n\t\tif (token) {\n\t\t\tfetch(`${API_ROOT}/profile`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': 'Bearer ' + token\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(resp => resp.json())\n\t\t\t.then(json => {\n\t\t\t\tconsole.log('profile:', json)\n\t\t\t\tconst {username, plant_care_rating, avatar} = json.user\n\t\t\t\tthis.setState({ user: { username, plant_care_rating, avatar} })\n\t\t\t})\n\t\t}\n\t}\n\n\tgetSignUp = (event, person) => {\n\t\tevent.preventDefault()\n\t\tconsole.log(person)\n\n\t\tlet username = person.username\n\t\tlet password = person.password\n\n\t\tfetch(`${API_ROOT}/new`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify({ user: { username, password } })\n\t\t})\n\t\t.then(resp => resp.json())\n\t\t.then(json => {\n\t\t\tconsole.log('login:', json)\n\t\t\tif (json && json.jwt) {\n\t\t\t\tthis.saveToken(json.jwt)\n\t\t\t\tthis.setState({ user: {username}})\n\t\t\t}\n\t\t})\n\t\t.then(() => {\n\t\t\tthis.getProfile()\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<NavBar user={this.state.user} getProfile={this.getProfile} onLogout={this.logout} />\n\t\t\t\t\t<Route exact path='/' render={(props) => \n\t\t\t\t\t\t<HomeContainer {...props} {...this.state} getProfile={this.getProfile} />} \n\t\t\t\t\t/>\n\t\t\t\t\t<Route exact path=\"/login\" render={ (props) => \n\t\t\t\t\t\t<Login {...props} onLogin={this.getProfile} onLogout={this.logout}/>} \n\t\t\t\t\t/>\n\t\t\t\t\t<Route path='/signup' render={(props) => <SignUp\n\t\t\t\t\t\t{...props} onSignUp={this.getSignUp} />}\n\t\t\t\t\t/>\n\t\t\t\t\t<Footer />\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}