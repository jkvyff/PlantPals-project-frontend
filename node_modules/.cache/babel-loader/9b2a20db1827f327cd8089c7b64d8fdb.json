{"ast":null,"code":"var _jsxFileName = \"/Users/kristian/Development/code/Mod5/Project/PlantPals-project-frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { API_ROOT } from './constants';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport HomeContainer from './containers/HomeContainer';\nimport Login from './components/Login';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: {}\n    };\n\n    this.logout = event => {\n      this.clearToken();\n      this.setState({\n        user: ''\n      });\n    };\n\n    this.getProfile = () => {\n      let token = localStorage.getItem('jwt');\n      fetch(\"\".concat(API_ROOT, \"/profile\"), {\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(resp => resp.json()).then(json => {\n        console.log('profile:', json);\n        this.setState({\n          user: json.user.username\n        });\n      });\n    };\n\n    this.getSignUp = (event, person) => {\n      event.preventDefault();\n      console.log(person);\n      debugger;\n      let username = person.username;\n      let password = person.password;\n      fetch(\"\".concat(API_ROOT, \"/new\"), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: {\n            username,\n            password\n          }\n        })\n      }).then(resp => resp.json()).then(json => {\n        console.log('login:', json);\n\n        if (json && json.jwt) {\n          this.saveToken(json.jwt);\n          this.setState({\n            user: {\n              username\n            }\n          });\n        }\n      }).then(() => {\n        this.getProfile();\n      });\n    };\n  }\n\n  clearToken(jwt) {\n    localStorage.setItem('jwt', '');\n  }\n\n  saveToken(jwt) {\n    localStorage.setItem('jwt', jwt);\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(Login, Object.assign({}, props, {\n        onLogin: this.getProfile,\n        onLogout: this.logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/home\",\n      render: props => React.createElement(HomeContainer, Object.assign({}, props, this.state, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kristian/Development/code/Mod5/Project/PlantPals-project-frontend/src/App.js"],"names":["React","Component","API_ROOT","BrowserRouter","Router","Route","HomeContainer","Login","App","state","user","logout","event","clearToken","setState","getProfile","token","localStorage","getItem","fetch","headers","then","resp","json","console","log","username","getSignUp","person","preventDefault","password","method","body","JSON","stringify","jwt","saveToken","setItem","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { API_ROOT } from './constants';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport HomeContainer from './containers/HomeContainer'\nimport Login from './components/Login'\n\n\nclass App extends Component {\n\n\tstate = {\n\t\tuser: {}\n\t}\n\n\tlogout = event => {\n\t\tthis.clearToken()\n\t\tthis.setState({ user: '' })\n\t}\n\n\tclearToken(jwt) {\n\t\tlocalStorage.setItem('jwt', '')\n\t}\n\t  \n\tgetProfile = () => {\n\t\tlet token = localStorage.getItem('jwt')\n\t\tfetch(`${API_ROOT}/profile`, {\n\t\t\theaders: {\n\t\t\t\t'Authorization': 'Bearer ' + token\n\t\t\t}\n\t\t})\n\t\t.then(resp => resp.json())\n\t\t.then(json => {\n\t\t\tconsole.log('profile:', json)\n\t\t\tthis.setState({ user: json.user.username })\n\t\t})\n\t}\n\n\tgetSignUp = (event, person) => {\n\t\tevent.preventDefault()\n\t\tconsole.log(person)\n\t\tdebugger\n\n\t\tlet username = person.username\n\t\tlet password = person.password\n\n\n\tfetch(`${API_ROOT}/new`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({ user: { username, password } })\n\t\t})\n\t\t.then(resp => resp.json())\n\t\t.then(json => {\n\t\t\tconsole.log('login:', json)\n\t\t\tif (json && json.jwt) {\n\t\t\t\tthis.saveToken(json.jwt)\n\t\t\t\tthis.setState({ user: {username}})\n\t\t\t}\n\t\t})\n\t\t.then(() => {\n\t\t\tthis.getProfile()\n\t\t})\n\t}\n\n\tsaveToken(jwt) {\n\t\tlocalStorage.setItem('jwt', jwt)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t{/*<NavBar documents={documents} onLogout={this.logout} />*/}\n\t\t\t\t\t<Route exact path=\"/\" render={ (props) => \n\t\t\t\t\t\t<Login {...props} onLogin={this.getProfile} onLogout={this.logout}/>} \n\t\t\t\t\t/>\n\t\t\t\t\t<Route path='/home' render={(props) => \n\t\t\t\t\t\t<HomeContainer {...props} {...this.state} />} \n\t\t\t\t\t/>\n\t\t\t\t\t\n\t\t\t\t\t{/*<Route path='/signup' render={(props) => <SignUp\n\t\t\t\t\t\t{...props} onSignUp={this.getSignUp} />}\n\t\t\t\t\t/>*/}\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}