{"ast":null,"code":"var _jsxFileName = \"/Users/kristian/Development/code/Mod5/Project/PlantPals-project-frontend/src/components/PlantIndex.js\";\nimport React, { Component } from 'react';\n\nclass PlantIndex extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      plants: [],\n      chosen: {}\n    };\n\n    this.findPlants = name => {\n      const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n      const URL = \"https://trefle.io/api/plants?q=\".concat(name);\n      fetch(proxyUrl + URL, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer OVUxRkpUM2dkeXpRaFZjd2JqVFlGZz09',\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(json => {\n        this.setState({\n          plants: json\n        });\n        this.extractValidPlantURL(json);\n      });\n    };\n\n    this.extractValidPlantURL = json => {\n      let validIds = [];\n\n      for (var i = 0; i < json.length; i++) {\n        console.log(json[i]);\n\n        if (json[i].complete_data) {\n          validIds.push(json[i].url);\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.findPlants('Zamioculcas Zamiifolia');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, this.state.plants && this.state.plants.map(plant => {\n      return React.createElement(\"div\", {\n        key: plant.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Name: \", plant.common_name), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Scientific Name: \", plant.scientific_name), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Complete Data: \", plant.complete_data ? \"True\" : \"False\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }));\n    }));\n  }\n\n}\n\nexport default PlantIndex;","map":{"version":3,"sources":["/Users/kristian/Development/code/Mod5/Project/PlantPals-project-frontend/src/components/PlantIndex.js"],"names":["React","Component","PlantIndex","state","plants","chosen","findPlants","name","proxyUrl","URL","fetch","method","headers","Accept","then","res","json","setState","extractValidPlantURL","validIds","i","length","console","log","complete_data","push","url","componentDidMount","render","map","plant","id","common_name","scientific_name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAClCE,KADkC,GAC1B;AACPC,MAAAA,MAAM,EAAE,EADD;AAEPC,MAAAA,MAAM,EAAE;AAFD,KAD0B;;AAAA,SA0BlCC,UA1BkC,GA0BrBC,IAAI,IAAI;AACpB,YAAMC,QAAQ,GAAG,sCAAjB;AACA,YAAMC,GAAG,4CAAqCF,IAArC,CAAT;AACAG,MAAAA,KAAK,CAACF,QAAQ,GAAGC,GAAZ,EAAiB;AACrBE,QAAAA,MAAM,EAAE,KADa;AAErBC,QAAAA,OAAO,EAAE;AACR,0BAAgB,kBADR;AAER,2BAAiB,yCAFT;AAGHC,UAAAA,MAAM,EAAE;AAHL;AAFY,OAAjB,CAAL,CAQCC,IARD,CAQMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARb,EASCF,IATD,CASME,IAAI,IAAI;AACb,aAAKC,QAAL,CAAc;AAACb,UAAAA,MAAM,EAAEY;AAAT,SAAd;AACA,aAAKE,oBAAL,CAA0BF,IAA1B;AACA,OAZD;AAaA,KA1CiC;;AAAA,SA4ClCE,oBA5CkC,GA4CXF,IAAI,IAAI;AAC9B,UAAIG,QAAQ,GAAG,EAAf;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,IAAI,CAACK,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACrCE,QAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACI,CAAD,CAAhB;;AACA,YAAIJ,IAAI,CAACI,CAAD,CAAJ,CAAQI,aAAZ,EAA2B;AAC1BL,UAAAA,QAAQ,CAACM,IAAT,CAAcT,IAAI,CAACI,CAAD,CAAJ,CAAQM,GAAtB;AACA;AACD;AACD,KApDiC;AAAA;;AAMlCC,EAAAA,iBAAiB,GAAG;AACnB,SAAKrB,UAAL,CAAgB,wBAAhB;AACA;;AAEDsB,EAAAA,MAAM,GAAG;AACR,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKzB,KAAL,CAAWC,MAAX,IAAqB,KAAKD,KAAL,CAAWC,MAAX,CAAkByB,GAAlB,CAAsBC,KAAK,IAAI;AACpD,aACA;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAWD,KAAK,CAACE,WAAjB,CADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAsBF,KAAK,CAACG,eAA5B,CAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAoBH,KAAK,CAACN,aAAN,GAAsB,MAAtB,GAA+B,OAAnD,CAHD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJD,CADA;AAOA,KARqB,CADvB,CADD;AAaA;;AAxBiC;;AAuDnC,eAAetB,UAAf","sourcesContent":["import React, {Component} from 'react'\n\nclass PlantIndex extends Component {\n\tstate = {\n\t\tplants: [],\n\t\tchosen: {}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.findPlants('Zamioculcas Zamiifolia')\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.state.plants && this.state.plants.map(plant => {\n\t\t\t\t\treturn (\n\t\t\t\t\t<div key={plant.id}>\n\t\t\t\t\t\t<h2>Name: {plant.common_name}</h2>\n\t\t\t\t\t\t<h2>Scientific Name: {plant.scientific_name}</h2>\n\t\t\t\t\t\t<h2>Complete Data: {plant.complete_data ? \"True\" : \"False\"}</h2>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</div>)\n\t\t\t\t})}\n\t\t\t</div>\n\t\t)\n\t}\n\n\tfindPlants = name => {\n\t\tconst proxyUrl = 'https://cors-anywhere.herokuapp.com/' \n\t\tconst URL = `https://trefle.io/api/plants?q=${name}`\n\t\tfetch(proxyUrl + URL, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Authorization': 'Bearer OVUxRkpUM2dkeXpRaFZjd2JqVFlGZz09',\n      \t\t\tAccept: \"application/json\"\n\t\t\t}\n\t\t})\n\t\t.then(res => res.json())\n\t\t.then(json => {\n\t\t\tthis.setState({plants: json})\n\t\t\tthis.extractValidPlantURL(json)\n\t\t})\n\t}\n\t\n\textractValidPlantURL = json => {\n\t\tlet validIds = []\n\t\tfor (var i = 0; i < json.length; i++) {\n\t\t\tconsole.log(json[i])\n\t\t\tif (json[i].complete_data) {\n\t\t\t\tvalidIds.push(json[i].url)\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default PlantIndex"]},"metadata":{},"sourceType":"module"}