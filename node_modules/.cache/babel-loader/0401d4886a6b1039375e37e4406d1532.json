{"ast":null,"code":"var _jsxFileName = \"/Users/kristian/Development/code/Mod5/Project/PlantPals-project-frontend/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { API_ROOT } from '../constants';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      password: ''\n    };\n\n    this.login = event => {\n      event.preventDefault();\n      console.log('log in');\n      let username = this.username.current.value;\n      let password = this.password.current.value;\n      fetch(\"\".concat(API_ROOT, \"/login\"), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: {\n            username,\n            password\n          }\n        })\n      }).then(resp => resp.json()).then(json => {\n        console.log('login:', json);\n\n        if (json && json.jwt) {\n          this.saveToken(json.jwt);\n          this.props.onLogin();\n        }\n      }).then(() => {\n        if (username === '' && password === '') {\n          alert(\"Please Enter In Data\");\n        } else {\n          this.props.history.push('/home');\n        }\n      });\n    };\n\n    this.logout = event => {\n      this.props.onLogout(event);\n    };\n\n    this.username = React.createRef();\n    this.password = React.createRef();\n\n    if (this.getToken()) {// TODO: if already logged in, redirect away from login page\n    }\n  }\n\n  saveToken(jwt) {\n    localStorage.setItem('jwt', jwt);\n  }\n\n  clearToken(jwt) {\n    localStorage.setItem('jwt', '');\n  }\n\n  getToken(jwt) {\n    return localStorage.getItem('jwt');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"page-login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ui centered grid container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"nine wide column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui warning message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Plant Pals\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Please Login to find a new plant pal!\"))), React.createElement(\"div\", {\n      className: \"ui fluid card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"ui form\",\n      method: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"User\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"user\",\n      placeholder: \"User\",\n      ref: this.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"pass\",\n      placeholder: \"Password\",\n      ref: this.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"ui fluid large submit button\",\n      type: \"submit\",\n      onClick: this.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Login\")), React.createElement(\"div\", {\n      className: \"ui error message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"New User?  Sign up\", React.createElement(\"a\", {\n      href: \"./signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"  Here!\"))), React.createElement(\"button\", {\n      className: \"ui fluid large submit button\",\n      type: \"Logout\",\n      onClick: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Logout\")))));\n  }\n\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["/Users/kristian/Development/code/Mod5/Project/PlantPals-project-frontend/src/components/Login.js"],"names":["React","Component","withRouter","API_ROOT","Login","constructor","state","username","password","login","event","preventDefault","console","log","current","value","fetch","method","headers","body","JSON","stringify","user","then","resp","json","jwt","saveToken","props","onLogin","alert","history","push","logout","onLogout","createRef","getToken","localStorage","setItem","clearToken","getItem","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { API_ROOT} from '../constants';\n\n\nclass Login extends Component {\n\n    state = {\n        username: '',\n        password: ''\n    }\n\n    constructor() {\n        super()\n        this.username = React.createRef()\n        this.password = React.createRef()\n\n        if (this.getToken()) {\n            // TODO: if already logged in, redirect away from login page\n        }\n    }\n\n    login = event => {\n        event.preventDefault()\n        console.log('log in')\n\n        let username = this.username.current.value\n        let password = this.password.current.value\n\n        fetch(`${API_ROOT}/login`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json' \n            },\n            body: JSON.stringify({ user: {username, password}})\n        })\n        .then(resp => resp.json())\n        .then(json => {\n            console.log('login:', json)\n            if (json && json.jwt) {\n                this.saveToken(json.jwt)\n                this.props.onLogin()\n            }\n        })\n        .then(() => {\n            if (username === '' && password === '') {\n                alert(\"Please Enter In Data\")\n            } else {\n                this.props.history.push('/home')\n            } \n        })\n    }\n\n    logout = event => {\n        this.props.onLogout(event)\n    }\n\n    saveToken(jwt) {\n        localStorage.setItem('jwt', jwt)\n    }\n\n    clearToken(jwt) {\n        localStorage.setItem('jwt', '')\n    }\n\n    getToken(jwt) {\n        return localStorage.getItem('jwt')\n    }\n\n    render() {\n        return (\n            <div className=\"page-login\">\n                <br></br>\n                <div className=\"ui centered grid container\">\n                    <div className=\"nine wide column\">\n                        <div className=\"ui warning message\"> \n                            <div className=\"content\">\n\t                            <div className=\"header\">Plant Pals</div>\n                                <p>Please Login to find a new plant pal!</p>\n                            </div>\n                        </div>\n                        <div className=\"ui fluid card\">\n                            <div className=\"content\">\n                                <form className=\"ui form\" method=\"POST\">\n                                    <div className=\"field\">\n                                        <label>User</label>\n                                        <input type=\"text\" name=\"user\" placeholder=\"User\" ref={this.username}></input>\n                                    </div>\n                                    <div className=\"field\">\n                                        <label>Password</label>\n                                        <input type=\"password\" name=\"pass\" placeholder=\"Password\" ref={this.password}></input>\n                                    </div>\n                                    <button className=\"ui fluid large submit button\" type=\"submit\" onClick={this.login}>\n                                        Login\n                                    </button>\n                                </form>\n                                <div className=\"ui error message\">\n                                    New User?  Sign up\n                                    <a href=\"./signup\">  Here!</a>\n                                </div>\n                            </div>\n                            <button className=\"ui fluid large submit button\" type=\"Logout\" onClick={this.logout}>\n                                Logout\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Login);"]},"metadata":{},"sourceType":"module"}